# -*- coding: utf-8 -*-
# @Time : 2022/7/1 14:02
# @Author : qingquan
# @File : tmp.py
# [ 0.0093, -0.0176, -0.0100,  ...,  0.0067, -0.0092, -0.0253],
# [ 0.0027, -0.0137, -0.0066,  ...,  0.0074, -0.0070, -0.0225],
# [ 0.0057, -0.0133, -0.0273,  ...,  0.0112, -0.0063, -0.0340],
# ...,
# [-0.0035, -0.0129, -0.0212,  ...,  0.0141, -0.0068, -0.0247],
# [ 0.0042, -0.0261, -0.0175,  ...,  0.0083, -0.0111, -0.0293],
# [ 0.0135, -0.0155, -0.0173,  ...,  0.0191, -0.0115, -0.0336]
#
#
# [[-0.0088, -0.0106,  0.0075,  ...,  0.0084, -0.0009,  0.0124],
# [-0.0033, -0.0084,  0.0002,  ..., -0.0046, -0.0194,  0.0202],
# [-0.0033, -0.0001, -0.0203,  ..., -0.0041,  0.0170,  0.0104],
# ...,
# [-0.0140, -0.0020, -0.0188,  ...,  0.0103, -0.0201,  0.0014],
# [ 0.0167,  0.0059,  0.0166,  ..., -0.0159, -0.0122, -0.0100],
# [ 0.0133, -0.0120,  0.0165,  ..., -0.0014, -0.0087, -0.0147]]
import torch

path_random = '../../ckpts/small_net_random/9.pth'  # 1588552713
path_wiki = '../../ckpts/small_net_wiki/8.pth'  # 1588552713
path_cmcc = '../../ckpts/small_net_cmcc/5.pth'  # 1588552713


def count_num(path):
    params = torch.load(path)['params']
    # print(params)
    total_num = 0
    for k, v in params.items():
        if len(v.shape) == 1:
            total_num += v.shape[0]
        elif len(v.shape) == 2:
            total_num += v.shape[0] * v.shape[1]
        # print(k, v.shape)
    return total_num


if __name__ == '__main__':
    res = count_num(path_wiki)
    print(res)